---
layout: default
title: Add design using HTML & CSS
permalink: design
---

# Add design using HTML & CSS

*Created by Alex Liao, [@alexliao](http://bannka.com/alex)

Now the app is running well, only still looks like scalffold. Let's add some design to make it a professional web site. When you finished this tutorial, your app will looks like [this](http://railsgirlsapp.herokuapp.com/ideas)

## Step 1: Adjust the application layout

First, let's use bootstrap.min.css to apply a more lightweight style set to your app. 

Open `app/views/layouts/application.html.erb` in your text editor and replace the line

{% highlight html %}
<link rel="stylesheet" href="http://railsgirls.com/assets/bootstrap.css">
{% endhighlight %}

with

{% highlight html %}
<link rel="stylesheet" href="http://twitter.github.com/bootstrap/1.3.0/bootstrap.min.css" />
{% endhighlight %}

and replace

{% highlight html %}
<div class="navbar navbar-fixed-top">
  <div class="navbar-inner">
{% endhighlight %}

with

{% highlight html %}
<div class="topbar">
  <div class="fill">
{% endhighlight %}

Open `app/assets/stylesheets/application.css`, replace the line

{% highlight html %}
body { padding-top: 100px; }
{% endhighlight %}

with

{% highlight html %}
body { padding-top: 60px; }
{% endhighlight %}

Finally, delete the file `app/assets/stylesheets/scalffolds.css.scss` because we don't really need the default style generated by Rails. 

Now refresh the page [http://localhost:3000/ideas](http://localhost:3000/ideas), we will find no much change but it's a good preparation for the following steps.

## Step 2: Refine the navigation

Considering "idea" is the most important object in your app, we are going to put the "New Idea" button on navagation bar to make it always available.

Open `app/views/layouts/application.html.erb`, under the line

{% highlight erb %}
<li class="active"><a href="/ideas">Ideas</a></li>
{% endhighlight %}

add
{% highlight erb %}
<li ><%= link_to 'New Idea', new_idea_path %></li>
{% endhighlight %}

## Step 3: Design the idea list

Now it's time to make the idea list page looks professional. For doing that, we are going to replace the table layout with div layout

**Coach:** Talk a little about Table vs Div.

Open `app/views/ideas/index.html.erb` in your text editor and replace all lines with

{% highlight erb %}
<h1>Listing ideas</h1>

<% @ideas.each do |idea| %>
<div class="row">
  <div class="span4">
    <%= image_tag idea.picture_url, :width => '100%' if idea.picture.present?%>
    <h4><%= link_to idea.name, idea %></h4>
    <%= idea.description %>
  </div>
<% end %>

<br />
{% endhighlight %}

**Coach:** Explain what the new code means line by line, and talk a little about Bootstrap 12 grids layout.

Refresh it! We get a nice looking idea list. Click the "New Idea" button, create more ideas with real text and pretty pictures, the page will looks much better with content. There is a principle of contemporary web design: content is the best decoration. 

## Step 4: Design the idea details page

Click the title of an idea, you will be brought to the details page of the idea. Now it is still scaffold generated by Rails, let's make it better.

Open `app/views/ideas/show.html.erb` in your text editor and replace all lines with

{% highlight erb %}
<p id="notice"><%= notice %></p>

<div class="row">
  <div class="span9">
    <%= image_tag(@idea.picture_url, :width => "100%") if @idea.picture.present? %>
  </div>

  <div class="span3">
    <p><b>Name: </b><%= @idea.name %></p>
    <p><b>Description: </b><%= @idea.description %></p>
    <p>
      <%= link_to 'Edit', edit_idea_path(@idea) %> |
      <%= link_to 'Destroy', @idea, confirm: 'Are you sure?', method: :delete %> |
      <%= link_to 'Back', ideas_path %>
    </p>
  </div>
</div>
{% endhighlight %}


**Coach:** Explain what the new code means line by line.

## What next?

* Design the new idea form with the knowledge learnt
* Add more design to the pages as your wish
* follow the other guides to learn more technology about Rails

