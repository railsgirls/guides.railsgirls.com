---
layout: default
title: Rails Girls on Trucker
permalink: trucker
---

# Put Your App Online With Trucker.io

*Created by Floor Drees, [@floordrees](https://twitter.com/floordrees) for [Rails Girls Leiden](http://railsgirls.com/leiden)* 

### Get Trucker

Follow steps 1 through 3 of the [Getting Started guide](http://developers.trucker.io/Getting-Started) to create an account, install the command line tool and login.

To install `trucker-cli` (the command line tool), type:
{% highlight sh %}
$ gem install trucker-cli
{% endhighlight %}

#### Log in Trucker

You can create and manage applications using the Trucker control panel. However you will need to also log in using the Trucker command line client:
{% highlight sh %}
$ truck target https://api.ie.trucker.io  
Setting target to https://api.ie.trucker.io... OK  

$ truck login  
email>  
password>  
{% endhighlight %}

At this point, the Trucker client will require that you choose a space to work in. Spaces are environments whose purpose is to organize your applications based on their life-cycle stage. Your Trucker account comes equipped with the following spaces:

{% highlight sh %}
1: development
2: production
3: staging
Space>
{% endhighlight %}

__COACH__: Talk about the benefits of deploying to Trucker.io (and having datacenters in Europe, rather than the US).

### Version Control

We need to add our code to version control. You can do this by running the following in the terminal:

{% highlight sh %}
git init
git add .
git commit -m "initial commit"
{% endhighlight %}

__COACH__: This would be a great time to talk about version control systems and git.

### Deploy your application to Trucker

#### Push the application to Trucker.io

First perform a `push` command and enter the name you want your application to sport (we used 'railsgirls').
{% highlight sh %}
$ truck push
Name> railsgirls
{% endhighlight %}


{% highlight sh %}
Instances> 1

1: 128M
2: 256M
3: 512M
4: 1G
Memory Limit> 256M

Creating railsgirls... OK

1: railsgirls
2: none
Subdomain> railsgirls

1: ie.trucker.io
2: none
Domain> ie.trucker.io

Creating route railsgirls.ie.trucker.io... OK
Binding railsgirls.trucker.io to railsgirls... OK
{% endhighlight %}

Next, add MySQL as your database:

{% highlight sh %}
Create services for application?> y

1: rds-mysql n/a, via aws
2: redis 2.6
3: user-provided , via
What kind?> 1

Name?> rds-mysql-aa0d6

1: 100mb: Shared service, 100MB storage, 10 connections
Which plan?> 1

Creating service rds-mysql-aa0d6... OK
Binding rds-mysql-aa0d6 to trucker-rails... OK
{% endhighlight %}

__COACH__: Talk about MySQL.


We don't want to add other services, so you can answer the following questions with `n`: 
{% highlight sh %}
Create another service?> n

Bind other services to application?> n
{% endhighlight %}

After saving your application
{% highlight sh %}
Save configuration?> y

Saving to manifest.yml... OK
Uploading trucker-rails
{% endhighlight %}

your app will be deployed. The output in your terminal should look something like this:

{% highlight sh %}
Uploading railsgirls... OK
Preparing to start railsgirls... OK
-----> Downloaded app package (40K)
-----> Using Ruby version: ruby-1.9.3
-----> Installing dependencies using Bundler version 1.3.2
(...)
Checking status of app 'railsgirls'...
  1 of 1 instances running (1 running)
Push successful! App 'railsgirls' available at http://railsgirls.ie.trucker.io
{% endhighlight %}

Your application is now available at http://railsgirls.ie.trucker.io!
