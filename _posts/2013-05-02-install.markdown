---
layout: default
title: Setup recipe for Rails Girls
permalink: install
---

# Setup recipe for Rails Girls

<span class="muted">Cooking time: 5min active / 15-30min passive</span>

To build apps and other things with Ruby on Rails, we need to setup some software and the developer environment for your computer.

Follow the instructions for your operating system. If you run into any problems, don&#8217;t panic. Inform us at the event and we can solve it together.

- [Setup for macOS](#setup-for-os-x)
- [Setup for Windows](#setup-for-windows)
- [Setup for Linux](#setup-for-linux)
- [Alternative Installment for all OS](#virtual-machine)
- [Using a Cloud Service - No Installation Required](#using-a-cloud-service)

<hr />

## Setup for macOS

### _1._ Let&#8217;s check the version of the operating system.

Click the Apple menu and choose _About this Mac_.

![Apple menu](/images/1.png "Apple menu")

### _2._ In the window you will find the version of your operating system.

If your version number starts with 10.6, 10.7, 10.8, 10.9, 10.10, 10.11 or higher this guide is for you. If it&#8217;s something else, we can setup your machine at the event.

![About this Mac dialog](/images/2.png "About this Mac dialog")

### _3a._ If your OS X / macOS version is 10.9 or higher:

If your version number starts with 10.9, 10.10, 10.11 or higher, follow these steps. We are installing homebrew and rbenv.

#### _3a1._ Install Command line tools on terminal:

{% highlight sh %}
xcode-select --install
{% endhighlight %}

#### _3a2._ Install [Homebrew](https://brew.sh/):

{% highlight sh %}
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
{% endhighlight %}

#### _3a3._ Install [rbenv](https://github.com/rbenv/rbenv):

{% highlight sh %}
brew update
{% endhighlight %}

{% highlight sh %}
brew install rbenv
{% endhighlight %}

Find out what your `shell` is:

{% highlight sh %}
basename -a "$SHELL"
{% endhighlight %}

If the output is `bash`:

{% highlight sh %}
echo 'eval "$(rbenv init -)"' >> ~/.bash_profile
{% endhighlight %}

{% highlight sh %}
source ~/.bash_profile
{% endhighlight %}

If the output is `zsh`:

{% highlight sh %}
echo 'eval "$(rbenv init -)"' >> ~/.zshrc
{% endhighlight %}

{% highlight sh %}
source ~/.zshrc
{% endhighlight %}

#### _3a4._ Build Ruby with rbenv:

You can find the newest version of Ruby with the command "rbenv install -l".

{% highlight sh %}
rbenv install 3.1.3
{% endhighlight %}

If you got "OpenSSL::SSL::SSLError: ... : certificate verify failed" error, try it this way.

{% highlight sh %}
brew install curl-ca-bundle
{% endhighlight %}

{% highlight sh %}
cp /usr/local/opt/curl-ca-bundle/share/ca-bundle.crt `ruby -ropenssl -e 'puts OpenSSL::X509::DEFAULT_CERT_FILE'`
{% endhighlight %}

#### _3a5._ Set default Ruby:

{% highlight sh %}
rbenv global 3.1.3
{% endhighlight %}

{% highlight sh %}
rbenv local 3.1.3
{% endhighlight %}

{% highlight sh %}
rbenv shell 3.1.3
{% endhighlight %}

Check that your `ruby` version matches what you installed. It will look something like the output below, make sure the `ruby 3.1.3` part matches.

{% highlight sh %}
ruby --version
ruby 3.1.3p185 (2022-11-24 revision 1a6b16756e) [arm64-darwin22]
{% endhighlight %}

#### _3a6._ Install rails:

{% highlight sh %}
gem install rails --no-document
{% endhighlight %}

{% highlight sh %}
rbenv rehash
{% endhighlight %}

### _3b._ If your OS X version is 10.6, 10.7, or 10.8:

Download the RailsInstaller for your version of OS X:

- [RailsInstaller for 10.7 and 10.8](http://railsinstaller.s3.amazonaws.com/RailsInstaller-1.0.4-osx-10.7.app.tgz) <span class="muted">(325MB)</span>
- [RailsInstaller for 10.6](http://railsinstaller.s3.amazonaws.com/RailsInstaller-1.0.4-osx-10.6.app.tgz) <span class="muted">(224MB)</span>

Double click the downloaded file and it will unpack it into the current directory. Double click the the newly unpacked 'RailsInstaller-1.0.4-osx-10.7.app' or 'RailsInstaller-1.0.4-osx-10.6.app' and follow the instructions. It will open a README file with 'Rails Installer OS X' at the top. Please **ignore** the instructions in this file.

If the Rails version wasn't the latest, you could update it using a following command on terminal.

{% highlight sh %}
gem update rails --no-document
{% endhighlight %}

### _4._ Install yarn:

{% highlight sh %}
brew install yarn
{% endhighlight %}

If you need more information than the following to install yarn, please check [yarn's installation docs](https://yarnpkg.com/lang/en/docs/install/).

### _5._ Install a text editor to edit code files

For the workshop we recommend the text editor Visual Studio Code.

- [Download VS Code and install it](https://code.visualstudio.com).

If you are using Mac OS X 10.7 or older versions, you can use another editor [Sublime Text 2](http://www.sublimetext.com/2). Just to make sure that you're not mixing up using your terminal or text-editor: change the theme of your Sublime text-editor, choosing one of the following: "iPlastic", "Slush &amp; Poppies", or "Zenburnesque".

### _5._ Check the environment

Check that everything is working by running the application generator command.

{% highlight sh %}
rails -v
{% endhighlight %}

Should output `Rails 6.0.0` (or a higher version).

{% highlight sh %}
rails new myapp
{% endhighlight %}

{% highlight sh %}
cd myapp
{% endhighlight %}

{% highlight sh %}
rails server
{% endhighlight %}

Go to `http://localhost:3000` in your browser, and you should see the 'Yay! You're on Rails!' page.

Now you should have a working Ruby on Rails programming setup. Congrats!

**Coach:** We recommend to verify by using the scaffold command and inputting data with the generated page with coaches to ensure everything is working. Also: remove the test app `myapp` to make super sure no-one is working in the wrong folder, following the steps of the workshop.

<hr />

## Setup for Windows

To install Rails for Windows we'll need to install Ruby and several supporting tools such as Git, Node.js and SQLite. Follow the steps below in order to install these tools on your computer. When you're done with these steps you will have a Rails app running on your computer.

_During these steps we'll ask you to open and close the Windows Command Prompt every now and then. This can be either the "Command Prompt" or "Powershell" app. We ask you to close and re-open it, because when the Command Prompt starts it loads in the environment. When we install a new app, the environment does not get automatically updated in the Command Prompt. To test if the installation was successful we need to restart the Command Prompt and load the new environment._

### _1._ Install Ruby

- Download the [RubyInstaller](https://rubyinstaller.org/downloads/) for Windows.
  - [Direct link to Ruby 3.1.3 installer with Devkit](https://github.com/oneclick/rubyinstaller2/releases/download/RubyInstaller-3.1.3-1/rubyinstaller-3.1.3-1-x86.exe) for 32-bit architecture.
- Run the installer. Click through the installer using all the default options.
  - When prompted with the "MSYS2" installer, enter `1` and press Enter.
  - When prompted with the same "MSYS2" installer again, only press Enter.

### _2._ Install Git

- Visit the [Git installer for Windows](https://git-scm.com/download/win) download page.
  - Click the link for the "32-bit Git for Windows Setup" installer to download it.
- Run the installer. Click through the installer using all the default options.

### _3._ Install Node.js

- Visit [nodejs.org/en/download](https://nodejs.org/en/download/).
  - Select the "LTS" version tab, selected by default.
  - From the "Windows Installer (.msi)" row, click the link for the 32-bit architecture to download it.
- Run the installer. Click through the installer using all the default options.
- Open the Windows Command Prompt and run the following command to check if the installation was successful. It should output a version number like `v12.16.0` (your version may differ).

{% highlight sh %}
node --version
{% endhighlight %}

- Close the Windows Command Prompt app.

#### _3a._ Install yarn

- Visit the [yarn download page](https://yarnpkg.com/lang/en/docs/install/#windows-stable).
- Download the installer by clicking the "Download installer" button.
- Run the installer. Click through the installer using all the default options.
- Open the Windows Command Prompt and run the following command to check if the installation was successful. It should output a version number like `1.22.0` (your version may differ).

{% highlight sh %}
yarn --version
{% endhighlight %}

- Close the Windows Command Prompt app.

### _4._ Install SQLite

- Visit [sqlite.org/download.html](https://sqlite.org/download.html)
- Scroll down to the "Precompiled Binaries for Windows" section.
- Download the `sqlite-dll-win32-x86-xxxxxxx.zip` package (where `xxxxxxx` is the most recent version number).
- Download the `sqlite-tools-win32-x86-xxxxxxx.zip` package (where `xxxxxxx` is the most recent version number).
- Extract the packages.
- In Windows Explorer, open "This Computer" in the sidebar and open the `C:` local disk.
- Create a directory called `sqlite3`.
- Copy the files from the extracted packages into the `C:\sqlite3` directory. As a result you will have the following files in that directory: `sqldiff`, `sqlite3.def`, `sqlite3.dll`, `sqlite3` and `sqlite3_analyzer`.
- Open the Windows Command Prompt and run the following command to add the `c:\sqlite3` directory to the system PATH.
  - For Command Prompt users:
    - `setx path "%path%;c:\sqlite3"`
  - For Powershell users:
    - `setx path "c:\sqlite3"`
- Close the Windows Command Prompt app.
- Re-open the Windows Command Prompt and run the following command to check if the installation was successful. It should output a version number like `3.31.1` (your version may differ).
  {% highlight sh %}
  sqlite3 --version
  {% endhighlight %}

- Close the Windows Command Prompt app.

### _5._ Install Rails

- Open the Windows Command Prompt run the following command. This will install the Rails and bundler gems on your computer.

{% highlight sh %}
gem install rails bundler --no-document
{% endhighlight %}

- Open the Windows Command Prompt and run the following command to check if the installation was successful. It should output a version number like `Rails 6.0.2.1` (your version may differ).

{% highlight sh %}
rails --version
{% endhighlight %}

_If you run into any problems during this step, check the [Possible errors](#possible-errors-during-installation) section for possible solutions._

### _6._ Install a text editor to edit code files

For the workshop we recommend the text editor Visual Studio Code.

- Visit the [VS Code download page](https://code.visualstudio.com) and follow the instructions.

If you are using Windows Vista or older versions, you can use another editor [Sublime Text 2](http://www.sublimetext.com/2). Just to make sure that you're not mixing up using your command prompt or text-editor: change the theme of your Sublime text-editor, choosing one of the following: "iPlastic", "Slush &amp; Poppies", or "Zenburnesque".

### _7._ Check the environment

Check that everything is working by running the application generator command.

{% highlight sh %}
rails new myapp
{% endhighlight %}

{% highlight sh %}
cd myapp
{% endhighlight %}

{% highlight sh %}
rails server
{% endhighlight %}

Go to [`http://localhost:3000`](http://localhost:3000) in your browser, and you should see the "Yay! You're on Rails!" page.

Now you should have a working Ruby on Rails programming setup. Congrats!

_If you run into any problems during this step, check the [Possible errors](#possible-errors-during-installation) section for solutions._

**Coach:** We recommend to verify by using the scaffold command and inputting data with the generated page with coaches to ensure everything is working. Also: remove the test app `myapp` to make super sure no-one is working in the wrong folder, following the steps of the workshop.

<hr />

## Setup for Linux

To install the Ruby on Rails development environment you just need to copy the lines below for your Linux distribution (Ubuntu or Fedora), paste it in the Terminal and press Enter. Enjoy the text flying on the screen; it will take quite some time. Grabbing a refreshing drink before starting is encouraged.

### _1._ Install yarn

If you need more information than the following to install yarn, please check [yarn's installation docs](https://yarnpkg.com/lang/en/docs/install/).

#### For Ubuntu:

{% highlight sh %}
sudo apt-get install curl
{% endhighlight %}

{% highlight sh %}
curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
{% endhighlight %}

{% highlight sh %}
sudo apt update && sudo apt install yarn
{% endhighlight %}

#### For Fedora:

{% highlight sh %}
curl -sL https://rpm.nodesource.com/setup_12.x | bash -
curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo
{% endhighlight %}

{% highlight sh %}
sudo yum install yarn
{% endhighlight %}

### _2._ Install Rails

#### For Ubuntu:

{% highlight sh %}
bash < <(curl -sL https://raw.github.com/railsgirls/installation-scripts/master/rails-install-ubuntu.sh)
{% endhighlight %}

If you are going to use RVM installations with gnome-terminal, you'll probably need to change it's default options before you can see and use the right Ruby and Rails versions. Find out how: [RVM documentation](http://rvm.io/integration/gnome-terminal).

#### For Fedora:

{% highlight sh %}
bash < <(curl -sL https://raw.github.com/railsgirls/installation-scripts/master/rails-install-fedora.sh)
{% endhighlight %}

Make sure that all works well by running the application generator command.

{% highlight sh %}
rails new myapp
{% endhighlight %}

### _4._ Install a text editor to edit code files

For the workshop we recommend the text editor Sublime Text.

- [Download Sublime Text and install it](http://www.sublimetext.com/2). Just to make sure that you're not mixing up using your terminal or text-editor: change the theme of your Sublime text-editor, choosing one of the following: "iPlastic", "Slush &amp; Poppies", or "Zenburnesque".

### _5._ Check the environment

Check that everything is working by running the application generator command.

{% highlight sh %}
rails new myapp
{% endhighlight %}

{% highlight sh %}
cd myapp
{% endhighlight %}

{% highlight sh %}
rails server
{% endhighlight %}

Go to `http://localhost:3000` in your browser, and you should see the 'Yay! You're on Rails!' page.

Now you should have a working Ruby on Rails programming setup. Congrats!

**Coach:** We recommend to verify by using the scaffold command and inputting data with the generated page with coaches to ensure everything is working. Also: remove the test app `myapp` to make super sure no-one is working in the wrong folder, following the steps of the workshop.

<hr />

## Virtual Machine

Instead of installing all tools on your machine, you can also set up a development environment in a Virtual Machine. Please find all the details [here]({% post_url 2014-03-24-alternative-dev-environment %}).

<hr />

## Using a Cloud Service

Instead of installing Ruby on Rails and an editor on your computer, you can use a webservice for development. All you need is a browser and an internet connection. This guide explains how to get started with [replit.com]. If you're using a different service, they may use a different wording, but the process is usually pretty similar.

### _1._ Create an account

Go to [replit.com] and sign up for free.

You will need to confirm your email and then fill in your details.

![Log in screen](/images/replit/create-account.png)

### _2._ Create a Ruby on Rails Repl

The Ruby on Rails Repl has all the software we need for the workshop already preinstalled.

<video width="100%" preload="auto" muted controls>
	<source src="/images/replit/replit-rails.mp4" type="video/mp4">
</video>

To create one, log into [replit.com] and click on 'Create'.

![Dashboard with the Create button pointed to by arrows](/images/replit/create-app.png)

In the field under Template, type in `rails`.

![Search dialog for Repl templates](/images/replit/search-rails.png)

1. Select the `Rails` option from Templates.
2. It generates a name for your Ruby on Rails app but you can change it in the Title field (maybe to "RailsGirls").
3. Click the `+ Create Repl` button

![Create the Rails Repl dialog](/images/replit/create-rails-repl.png)

### 3. Coding with your project

- On the left hand side, you find a file browser where you can navigate your directories and file.
- In the middle, you find the editor where you can modify your files.
- Click the `Run` bottom at the top to start up the freshly installed Ruby on Rails app.

![Run button highlighted to start the Rails app](images/replit/run.png)

- You'll see a mini web browser to the top right showing you your fresh Rails app running the default homepage with the Rails logo.

![Rails app running](/images/replit/rails-running.png)

- At the bottom right, when you click the `Shell` button you'll find the terminal where you can run commands.

![Shell](/images/replit/shell.png)

### 4. Returning to your project

When you log out and log back in to [replit.com], you can find your RailsGirls app in the middle of the dashboard. Just click it to go back into the project.

![Dashboard showing button to return to Rails project](/images/replit/re-open.png)

## Possible errors during installation

### Gem::RemoteFetcher error

If you get this error when running `rails new railsgirls` or `gem update rails`:

{% highlight sh %}
Gem::RemoteFetcher::FetchError: SSL_connect returned=1 errno=0 state=SSLv3 read
server certificate B: certificate verify failed (https://rubygems.org/gems/i18n-0.6.11.gem)
{% endhighlight %}

This means you have an older version of Rubygems and will need to update it manually first verify your Rubygems version

{% highlight sh %}
gem -v
{% endhighlight %}

If it is lower than `2.6.5` you will need to manually update it:

First download the [ruby-gems-update gem](https://rubygems.org/gems/rubygems-update-2.6.11.gem). Move the file to `c:\\rubygems-update-2.6.11.gem` then run:

{% highlight sh %}
gem install --local c:\\rubygems-update-2.6.11.gem
{% endhighlight %}

{% highlight sh %}
update_rubygems --no-document
{% endhighlight %}

{% highlight sh %}
gem uninstall rubygems-update -x
{% endhighlight %}

Check your version of rubygems

{% highlight sh %}
gem -v
{% endhighlight %}

Make sure it is equal or higher than `2.6.11`. Re-run the command that was failing previously.

If you are still running into problems you can always find the latest version of rubygems online at [rubygems.org](https://rubygems.org/pages/download). If you click on **GEM** you will get the latest version.

### During bundle install

The `Gem::RemoteFetcher::FetchError: SSL_connect` can also occur during the `bundle install` stage when creating a new rails app.

The error will make mention of [bit.ly/ruby-ssl](http://bit.ly/ruby-ssl). What is relevant for Windows users at this point is [this GitHub gist](https://gist.github.com/867550). The described manual way has proven to be successful to solve the `bundle install` error.

### 'x64_mingw' is not a valid platform Error

Sometimes you get the following error when running `rails server`:
`'x64_mingw' is not a valid platform` If you experience this error after using the RailsInstaller you have to do a small edit to the file `Gemfile`:

Look at the bottom of the file. You will probably see something like this as one of the last lines in the file:
`gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw]`. If you have this line with `:x64_mingw`, then please delete the `:x64_mingw` part. In the end it should just say:
`'tzinfo-data', platforms: [:mingw, :mswin]`

After you did that, please use your Command Prompt again and type `bundle update`.

### The sqlite3 gem failed to install

When running `rails new myapp` the `sqlite3` gem may fail to install. When this happens, first close the Windows Command Prompt app. Then re-open the Windows Command Prompt.

Next, install the `sqlite3` gem separately from the `rails` gem by running the following command:

{% highlight sh %}
gem install sqlite3
{% endhighlight %}

If this succeeds, remove the `myapp` directory the rails installer created and return to the installation instructions, to run `rails new myapp` again.

{% include other-guides.md page="install" %}

[replit.com]: https://replit.com
