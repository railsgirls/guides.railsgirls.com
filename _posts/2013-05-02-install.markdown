---
layout: default
title: Setup recipe for Rails Girls
permalink: install
---

# Setup recipe for Rails Girls
<span class="muted">Cooking time: 5min active / 15-30min passive</span>

To build apps and other things with Ruby on Rails, we need to setup some software and the developer environment for your computer.

Follow the instructions for your operating system. If you run into any problems, don&#8217;t panic. Inform us at the event and we can solve it together.

* [Setup for OS X](#setup-for-os-x)
* [Setup for Windows](#setup-for-windows)
* [Setup for Linux](#setup-for-linux)
* [Alternative Installment for all OS](#virtual-machine)
* [Using a Cloud Service - No Installation Required](#using-a-cloud-service)

<hr />

## Setup for OS X

### *1.* Let&#8217;s check the version of the operating system.

Click the Apple menu and choose *About this Mac*.

![Apple menu](/images/1.png "Apple menu")

### *2.* In the window you will find the version of your operating system.
If your version number starts with 10.6, 10.7, 10.8, 10.9, 10.10 or 10.11 this guide is for you. If it&#8217;s something else, we can setup your machine at the event.

![About this Mac dialog](/images/2.png "About this Mac dialog")

### *3a.* If your OS X version is 10.9 or higher:

If your version number starts with 10.9, 10.10 or 10.11, follow these steps. We are installing homebrew and rbenv.

#### *3a1.* Install Command line tools on terminal:

{% highlight sh %}
xcode-select --install
{% endhighlight %}

#### *3a2.* Install [Homebrew](http://brew.sh/):

{% highlight sh %}
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
{% endhighlight %}

#### *3a3.* Install [rbenv](https://github.com/sstephenson/rbenv):

{% highlight sh %}
brew update
brew install rbenv ruby-build
echo 'eval "$(rbenv init -)"' >> ~/.bash_profile
echo 'export PATH="$HOME/.rbenv/shims:$PATH"' >> ~/.bash_profile
source ~/.bash_profile
{% endhighlight %}

#### *3a4.* Build Ruby with rbenv:

You can find the newest version of Ruby with the command "rbenv install -l".

{% highlight sh %}
rbenv install 2.3.1
{% endhighlight %}

If you got "OpenSSL::SSL::SSLError: ... : certificate verify failed" error, try it this way.

{% highlight sh %}
brew install curl-ca-bundle
cp /usr/local/opt/curl-ca-bundle/share/ca-bundle.crt `ruby -ropenssl -e 'puts OpenSSL::X509::DEFAULT_CERT_FILE'`
{% endhighlight %}

#### *3a5.* Set default Ruby:

{% highlight sh %}
rbenv global 2.3.1
{% endhighlight %}

#### *3a6.* Install rails:

{% highlight sh %}
gem install rails --no-document
{% endhighlight %}

### *3b.* If your OS X version is 10.6, 10.7, or 10.8:
Download the RailsInstaller for your version of OS X:

* [RailsInstaller for 10.7 and 10.8](http://railsinstaller.s3.amazonaws.com/RailsInstaller-1.0.4-osx-10.7.app.tgz) <span class="muted">(325MB)</span>
* [RailsInstaller for 10.6](http://railsinstaller.s3.amazonaws.com/RailsInstaller-1.0.4-osx-10.6.app.tgz) <span class="muted">(224MB)</span>

Double click the downloaded file and it will unpack it into the current directory. Double click the the newly unpacked 'RailsInstaller-1.0.4-osx-10.7.app' or 'RailsInstaller-1.0.4-osx-10.6.app' and follow the instructions. It will open a README file with 'Rails Installer OS X' at the top. Please **ignore** the instructions in this file.

If the Rails version wasn't the latest, you could update it using a following command on terminal.

{% highlight sh %}
gem update rails --no-document
{% endhighlight %}

Make sure that all works well by running the application generator command.

{% highlight sh %}
rails new myapp
{% endhighlight %}

### *4.* Install a text editor to edit code files

For the workshop we recommend the text editor Atom.

* [Download Atom and install it](https://atom.io/)

If you are using Mac OS X 10.7 or older versions, you can use another editor [Sublime Text 2](http://www.sublimetext.com/2).

### *5.* Update your browser

Open [whatbrowser.org](http://whatbrowser.org) and update your browser if you don't have the latest version.


Now you should have a working Ruby on Rails programming setup. Congrats!

<hr />

## Setup for Windows

### *1.* Install Rails

Download [RailsInstaller](https://s3.amazonaws.com/railsinstaller/Windows/railsinstaller-3.2.0.exe) and run it. Click through the installer using the default options.

Open `Command Prompt with Ruby and Rails` and run the following commands to solve a problem in RailsInstaller3.2.0.

**Coach:** There is a bug that occurs "No such file or directory" error when using the `rails` command in RailsInstaller3.2.0. This is occured by problem with incorrect paths in `rails.bat` and `bundle.bat`. We can fix the problem copying `rake.bat` to `rails.bat` and `bundle.bat`. ([github issue page](https://github.com/railsinstaller/railsinstaller-windows/issues/76))

{% highlight sh %}
cd C:\RailsInstaller\Ruby2.2.0\bin
copy rake.bat rails.bat
copy rake.bat bundle.bat
{% endhighlight %}

Open `Command Prompt with Ruby and Rails` and run the following command:

{% highlight sh %}
rails -v
{% endhighlight %}

If the Rails version is less than 5, update it using a following command:

{% highlight sh %}
gem update rails --no-document
{% endhighlight %}

## Possible errors

### Gem::RemoteFetcher error

If you get this error when running `rails new railsgirls` or `gem update rails`:

{% highlight sh %}
Gem::RemoteFetcher::FetchError: SSL_connect returned=1 errno=0 state=SSLv3 read
server certificate B: certificate verify failed (https://rubygems.org/gems/i18n-
0.6.11.gem)
{% endhighlight %}

This means you have an older version of Rubygems and will need to update it manually first verify your Rubygems version

{% highlight sh %}
gem -v
{% endhighlight %}

If it is lower than `2.2.3` you will need to manually update it:


First download the [ruby-gems-update gem](https://rubygems.org/gems/rubygems-update-2.6.7.gem). Move the file to `c:\\rubygems-update-2.6.7.gem` then run:

{% highlight sh %}
gem install --local c:\\rubygems-update-2.6.7.gem
update_rubygems --no-document
gem uninstall rubygems-update -x
{% endhighlight %}

Check your version of rubygems

{% highlight sh %}
gem -v
{% endhighlight %}

Make sure it is equal or higher than `2.6.7`. Re-run the command that was failing previously.

If you are still running into problems you can always find the latest version of rubygems online at [rubygems.org](https://rubygems.org/pages/download). If you click on **GEM** you will get the latest version.

### During bundle install

The `Gem::RemoteFetcher::FetchError: SSL_connect` can also occur during the `bundle install` stage when creating a new rails app.

The error will make mention of [bit.ly/ruby-ssl](http://bit.ly/ruby-ssl). What is relevant for Windows users at this point is [this GitHub gist](https://gist.github.com/867550). The described manual way has proven to be succesful to solve the `bundle install` error.

### 'x64_mingw' is not a valid platform` Error

Sometimes you get the following error when running `rails server`:
`'x64_mingw' is not a valid platform` If you experience this error after using the RailsInstaller you have to do a small edit to the file `Gemfile`:

Look at the bottom of the file. You will probably see something like this as one of the last lines in the file:
`gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw]`. If you have this line with `:x64_mingw`, then please delete the `:x64_mingw` part. In the end it should just say:
`'tzinfo-data', platforms: [:mingw, :mswin]`

After you did that, please use your Command Prompt again and type `bundle update`.

### *2.* Install a text editor to edit code files

For the workshop we recommend the text editor Atom.

* [Download Atom and install it](https://github.com/atom/atom/releases/latest)
  * Download an atom zip file for windows and decompress it.
  * Copy the folder into your Program Files.
  * Launch atom in the folder.

If you are using Windows Vista or older versions, you can use another editor [Sublime Text 2](http://www.sublimetext.com/2).

### *3.* Update your browser

If you use Internet Explorer, we recommend installing [Firefox](mozilla.org/firefox) or [Google Chrome](google.com/chrome).

Open [whatbrowser.org](http://whatbrowser.org) and update your browser if you don't have the latest version.

### *4.* Install node

This is not strictly necessary, but it avoids a problem with and `ExecJS::RuntimeError` that might
occur later  ([see stackoverflow](https://stackoverflow.com/questions/12520456/execjsruntimeerror-on-windows-trying-to-follow-rubytutorial)).

* Go to [https://nodejs.org/](https://nodejs.org/) and install node LTS package
* Reopen your Rails Command Shell

Check your version of node

{% highlight sh %}
node --version
{% endhighlight %}

Make sure it is displaying version number.

### *5.* Check the environment

Check that everything is working by running the application generator command.

{% highlight sh %}
rails new myapp
cd myapp
rails server
{% endhighlight %}

Go to `http://localhost:3000` in your browser, and you should see the 'Yay! You're on Rails!' page.

Now you should have a working Ruby on Rails programming setup. Congrats!

**Coach:** We recommend to verify by using the scaffold command and inputting data with the generated page with coaches to ensure everything is working.

<hr />

## Setup for Linux

### *1.* Install Rails


To install the Ruby on Rails development environment you just need to copy the line below for your Linux distribution (Ubuntu or Fedora), paste it in the Terminal and press Enter. Enjoy the text flying on the screen; it will take quite some time. Grabbing a refreshing drink before starting is encouraged.

#### For Ubuntu:

{% highlight sh %}
sudo apt-get install curl
bash < <(curl -sL https://raw.github.com/railsgirls/installation-scripts/master/rails-install-ubuntu.sh)
{% endhighlight %}

If you are going to use RVM installations with gnome-terminal, you'll probably need to change it's default options before you can see and use the right Ruby and Rails versions. Find out how: [RVM documentation](http://rvm.io/integration/gnome-terminal).

#### For Fedora:

{% highlight sh %}
bash < <(curl -sL https://raw.github.com/railsgirls/installation-scripts/master/rails-install-fedora.sh)
{% endhighlight %}

Make sure that all works well by running the application generator command.

{% highlight sh %}
rails new myapp
{% endhighlight %}


### *2.* Install a text editor to edit code files

For the workshop we recommend the text editor Sublime Text.

* [Download Sublime Text and install it](http://www.sublimetext.com/2)


### *3.* Update your browser

Open [whatbrowser.org](http://whatbrowser.org) and update your browser if you don't have the latest version.


Now you should have a working Ruby on Rails programming setup. Congrats!

<hr />

## Virtual Machine

Instead of installing all tools on your machine, you can also set up a development environment in a Virtual Machine. Please find all the details [here]({% post_url 2014-03-24-alternative-dev-environment %}).

<hr />

## Using a Cloud Service

Instead of installing Ruby on Rails and an editor on your computer, you can use a webservice for development. All you need is a browser and an internet connection. This guide explains how to get started with [codenvy.io](https://codenvy.io). If you're using a different service, they may use a different wording, but the process is usually pretty similar.

### *1.* Update your browser

If you use Internet Explorer, we recommend installing [Firefox](mozilla.org/firefox) or [Google Chrome](google.com/chrome).

Open [whatbrowser.org](http://whatbrowser.org) and update your browser if you don't have the latest version.

### *2.* Create an account

Go to [codenvy.io](https://codenvy.io) and signup for free.

![](/images/codenvy/create-account.jpg)

### *3.* Setup a workspace for Ruby on Rails

The Ruby on Rails Workspace has all the software we need for the workshop already preinstalled. To create a workspace, log into [codenvy.io](https://codenvy.io) and click on 'Dashboard'. If no workspace has been created yet, the 'New Workspace' view is displayed.

![](/images/codenvy/create-workspace-dashboard.jpg)

In the 'New Workspace' view, a few settings have to be made.

* 'New from blank, template, or sample project' should already be selected
* Select 'Create new workspace from stack'
* Select 'Stack library'
* Type 'BITNAMIRAILS' into the 'Filter' input field and press enter
* Give the workspace a name of your choice. In the example this is 'rails-girls-app'.
* Under 'Template' select 'web-rails-simple'
* Now click on 'Create' to create the workspace (it takes a moment for the process to finish)

![](/images/codenvy/create-workspace.jpg)

* Codeenvy creates a folder '/projects' during initialization, in which you can later put your code. It also creates a Rails project that we do not need. You can see it in the Project Explorer. Ignore it or delete it by right-clicking on the folder.

### *4.* Find and restart your workspace
* If you've just created your project, you can probably skip these steps - they're good to know if you login to Codenvy again later
* If you haven't used your workspace or projects in a while, they might have been shutdown due to inactivity. You will notice an empty circle displayed next to the workspace name.

![](/images/codenvy/start-workspace.jpg)

* In this case simply click on the name of the workspace. It will then be restarted (which can take a while) and afterwards opened.
* If you have restarted a workspace, you need to run the `bundle` command again in the directory of your Rails project (you will learn more about the command in the app tutorial)

### *5.* Coding with your project
* On the left hand side, you find a file browser where you can navigate your directories and file
* In the middle, you find the editor where you can modify your files
* At the bottom, you find the terminal where you can run commands
* Everything you need is right here in you browser window - you do not need to start an editor or terminal anywhere else
* If you are following a guide or tutorial, use the commands for Linux even if you are on a Windows computer - your operating system does not matter, since all commands are run on your project's machine in the cloud, which is running Linux
* If a guide or tutorial asks you to start the rails server with `rails server` or `rails s`, append `-b 0.0.0.0` to this command so that you run `rails server -b 0.0.0.0`
* If a guide or tutorial asks you to run a rails command that contains `rails` or `rake`, prepend `bundle exec` to this command, e. g. `bundle exec rake db:migrate`.
* If a guide or tutorial asks you to point your browser to something like http://localhost:3000, follow these instructions instead:
  * Open the 'Operations perspective' (1) in Codenvy, go to the 'Servers' tab (2) and pick the URL entry in the line starting with 'rails' (see screenshot). Instead of http://localhost:3000, call this URL in your browser.
  ![](/images/codenvy/get-workspace-ip.jpg)
  * If, for example, you're asked to open http://localhost:3000/posts, open the preview URL in your browser and append '/posts' to the URL.
